#include "server_host_handle.h"

host_handle::host_handle(int listener) {
	hostSocket = listener;
	handleHost();
};

host_handle::~host_handle() {

}

void host_handle::handleHost () {	// Initial host

	vector <string> inquiry (receiveVector());	// get inquiry

	vector <char> filter (getFilter());			// get filter

	server_users_parser parser (inquiry, filter);	// dig data

	sendStringVector(parser.getOutput());		// sends digged data back to client

	sendIntVector

	close (hostSocket);		// close host socket
};

vector <char> host_handle::getFilter () {

	unsigned int bufferSize (receiveArgc());

	vector <char> buffer;

	if (bufferSize)
		buffer.resize(bufferSize);
	else
		return buffer;

	int n = read (hostSocket, &buffer[0], bufferSize);

	nCheck(n, READ_ERROR);

	return buffer;
};


